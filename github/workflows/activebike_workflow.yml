name: activebike_workflow

on:
  push:
    paths-ignore:
      - '**/README.md'

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
    - uses: actions/checkout@v2
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt

    - name: Test with flake8
      run: |
        python -m flake8 backend

  copy_to_server:
    name: Copying files to server
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v2

    - name: Create projects directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo rm -rf foodgram/
          mkdir -p foodgram/

    - name: Copy files
      uses: garygrossgarten/github-action-scp@release
      with:
        local: infra/
        remote: /home/${{ secrets.USER }}/foodgram/
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram/
            
            sudo rm .env
            sudo touch .env
            sudo chmod 666 .env
            
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo REVIEW=False >> .env

            sudo chmod 644 .env
            
            sudo docker-compose up -d